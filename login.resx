<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>